version: 2.1

dockerauth: &dockerauth
  username: $DOCKERHUB_USERNAME
  password: $DOCKERHUB_PASSWORD

jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      DOCKERHUB_REPO: &dockerhub_repo jadkison/formsling-ci
    steps:
      - checkout
      - run:
          name: Login to Docker Hub
          command: docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run:
          name: Pull base image from Docker Hub
          command: docker pull "${DOCKERHUB_REPO}:${CIRCLE_BRANCH}" || true
      - run:
          name: Rebuild the build image with the checked out source code
          command: docker build --cache-from "${DOCKERHUB_REPO}:${CIRCLE_BRANCH}" --tag "build:${CIRCLE_BRANCH}" .
      - run:
          name: Prepare volume for storing build artifacts
          command: |
            docker pull busybox
            docker volume create artifacts
      - run:
          name: Precompile assets into volume
          command: |
            docker run --rm \
            -v artifacts:/app \
            --env RAILS_MASTER_KEY=$RAILS_MASTER_KEY \
            --env RAILS_ENV=production \
            --env NODE_ENV=production \
            --env DEFAULT_URL_HOST=localhost \
            --env ACTION_MAILER_SMTP_SETTINGS={} \
            "build:${CIRCLE_BRANCH}" bundle exec rake assets:precompile \
            /
      - run:
          name: Copy artifacts from volume to project
          command: |
            CID=$(docker run -d -v artifacts:/app busybox true)
            docker cp $CID:/app/public /home/circleci/project/
      - run:
          name: Create the final build image
          command: |
            docker build --cache-from "build:${CIRCLE_BRANCH}" --tag "${DOCKERHUB_REPO}:${CIRCLE_SHA1}" .
      - run:
          name: Push the build image to Docker Hub
          command: docker push "${DOCKERHUB_REPO}:${CIRCLE_SHA1}"
  test:
    docker:
      image: jadkison/formsling-ci:<< pipeline.git.revision >>
    steps:
      - run: echo "Just testing..."
#  test:
#    docker:
#      - image: circleci/ruby:2.6.5-buster
#        environment:
#          RAILS_ENV: test
#          RACK_ENV: test
#          NODE_ENV: test
#          DATABASE_URL: localhost
#      - image: postgres:11.6
#        environment:
#          POSTGRES_DB: formsling_test
#    steps:
#      - checkout
#      - restore_cache:
#          keys:
#            - bundle-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
#            - bundle-v1-{{ arch }}-{{ .Branch }}
#            - bundle-v1
#      - run: bundle install --path vendor/bundle
#      - save_cache:
#          key: bundle-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
#          paths:
#            - vendor/bundle
#      - restore_cache:
#          keys:
#            - node-modules-v1-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
#            - node-modules-v1-{{ arch }}-{{ .Branch }}
#            - node-modules-v1
#      - run: yarn install
#      - save_cache:
#          key: node-modules-v1-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
#          paths:
#            - node_modules
#      - run:
#          name: Wait for DB
#          command: dockerize -wait tcp://localhost:5432 -timeout 1m
#      - run:
#          name: Setup test db
#          command: bundle exec rake db:setup --trace
#      - run:
#          name: Run rspec
#          command: bundle exec rspec --format documentation --format RspecJunitFormatter -o ~/reports/rspec.xml
#      - store_test_results:
#          path: ~/reports
#      - store_artifacts:
#          path: ~/reports
  deploy:
    docker:
      - image: docker:stable-git
        auth:
          <<: *dockerauth
    environment:
      DOCKERHUB_REPO: *dockerhub_repo
    steps:
      - setup_remote_docker
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "14:0d:31:61:06:2f:7d:6a:f1:cc:bd:58:86:f8:c0:fe"
      - run:
          name: Disable StrictHostKeyChecking
          command: |
            tee -a ~/.ssh/config > /dev/null <<EOT
            Host formsling.com staging.formsling.com
              StrictHostKeyChecking=no
              UserKnownHostsFile=/dev/null
            EOT
      - run:
          name: Login to Docker Hub
          command: docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run:
          name: Pull build image from Docker Hub
          command: docker pull "${DOCKERHUB_REPO}:${CIRCLE_SHA1}" || true
      - run:
          name: Create dokku tag from build image
          command: docker image tag "${DOCKERHUB_REPO}:${CIRCLE_SHA1}" "dokku/${DOKKU_APP}:${CIRCLE_SHA1}"
      - run:
          name: Deploy build image to dokku
          command: |
            echo "Sending image dokku/${DOKKU_APP}:${CIRCLE_SHA1} to dokku server"
            docker save "dokku/${DOKKU_APP}:${CIRCLE_SHA1}" | bzip2 | ssh formsling.com "bunzip2 | docker load"

            echo "Deploying dokku tag dokku/${DOKKU_APP}:${CIRCLE_SHA1}"
            ssh formsling.com "dokku tags:create ${DOKKU_APP} previous; dokku tags:deploy ${DOKKU_APP} ${CIRCLE_SHA1}"

            echo "Cleaning up..."
            ssh formsling.com 'bash -s' < scripts/cleanup-dokku-tag.sh $DOKKU_APP
          no_output_timeout: 10m
      - run:
          name: Cache the build image as the new base image with Docker Hub
          command: |
            docker image tag "${DOCKERHUB_REPO}:${CIRCLE_SHA1}" "${DOCKERHUB_REPO}:${CIRCLE_BRANCH}"
            docker push "${DOCKERHUB_REPO}:${CIRCLE_BRANCH}"

workflows:
  version: 2
  staging-workflow:
    jobs:
      - build:
          filters:
            branches:
              only: develop
      - test:
          requires:
            - build
          filters:
            branches:
              only: develop
      - deploy:
          context: formsling-staging
          requires:
            - test
          filters:
            branches:
              only: develop
  production-workflow:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - test:
          requires:
            - build
          filters:
            branches:
              only: master
      - hold:
          type: approval
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy:
          context: formsling-production
          requires:
            - hold
          filters:
            branches:
              only: master
